geom_bar() +
labs(
x = "Number of Bedrooms",
y = "Number of Houses",
title = "Number of Bedrooms in Houses Sold in 2007"
)
data |>
ggplot(aes(x = garage_spaces)) +
geom_bar() +
labs(
x = "Number of Garage Spaces",
y = "Number of Houses",
title = "Number of Garage Spaces in Houses Sold in 2007"
)
data |>
ggplot(aes(x = distance, y = price2007)) +
geom_point() +
labs(
x = "Distance to Rail Trail",
y = "Estimated 2007 Value (Thousands of Dollars)",
title = "Housing Value vs. Distance to Rail Trail"
)
data |>
ggplot(aes(x = bedrooms, y = price2007)) +
geom_boxplot() +
labs(
x = "Number of Bedrooms",
y = "Estimated 2007 Value (Thousands of Dollars)",
title = "Housing Value vs. Number of Bedrooms"
)
data |>
ggplot(aes(x = garage_spaces, y = price2007)) +
geom_boxplot() +
labs(
x = "Number of Garage Spaces",
y = "Estimated 2007 Value (Thousands of Dollars)",
title = "Housing Value vs. Number of Garage Spaces"
)
data <- data |>
mutate(garage_spaces_new = ifelse(garage_spaces == 0,
"0",
ifelse(garage_spaces == 1,
"1",
ifelse(garage_spaces == 2,
"2+",
ifelse(garage_spaces == 4,
"2+",
NA))))) |>
mutate(garage_spaces_new = as.factor(garage_spaces_new))
data |>
ggplot(aes(x = bikescore, y = walkscore)) +
geom_point() +
labs(
x = "Bike Friendliness of Area",
y = "Walkability of Area",
title = "Collinearity of Bike Friendliness and Walkability"
)
data |>
ggplot(aes(x = acre, y = squarefeet)) +
geom_point() +
labs(
x = "Number of Acres on Property",
y = "Interior Finished Space (Thousands of Sq. Ft.)",
title = "Interior Finished Space vs. Total Number of Acres"
)
data$garage_spaces_new
data <- data |>
mutate(garage_spaces_new = ifelse(garage_spaces == 0,
"0",
ifelse(garage_spaces == 1,
"1",
ifelse(garage_spaces == 2,
"2+",
ifelse(garage_spaces == 4,
"2+",
NA))))) |>
mutate(garage_spaces_new = as.factor(garage_spaces_new))
data |>
ggplot(aes(x = garage_spaces_new, y = price2007)) +
geom_boxplot() +
labs(
x = "Number of Garage Spaces",
y = "Estimated 2007 Value (Thousands of Dollars)",
title = "Housing Value vs. Number of Garage Spaces"
)
data <- data |>
mutate(garage_spaces_new = ifelse(garage_spaces == 0,
"0",
ifelse(garage_spaces == 1,
"1",
ifelse(garage_spaces == 2,
"2+",
ifelse(garage_spaces == 4,
"2+",
NA))))) |>
mutate(garage_spaces_new = as.factor(garage_spaces_new))
data |>
ggplot(aes(x = distance)) +
geom_histogram(bins = 20) +
labs(
x = "Distance to Rail Trail (Miles)",
y = "Number of Houses",
title = "Distance to Rail Trail of Homes Sold in 2007"
)
summary(data$price2007)
summary(data$price2007)
data |>
ggplot(aes(x = distance)) +
geom_histogram(bins = 20) +
labs(
x = "Distance to Rail Trail (Miles)",
y = "Number of Houses",
title = "Distance to Rail Trail of Homes Sold in 2007"
)
summary(data$price2007)
data |>
ggplot(aes(x = price2007)) +
geom_histogram(bins = 20) +
geom_smooth()
summary(data$price2007)
data |>
ggplot(aes(x = price2007)) +
geom_histogram(bins = 20) +
labs(
x = "Estimated 2007 Value (Thousands of Dollars)",
y = "Number of Houses",
title = "Value of Homes Sold in 2007"
)
summary(data$distance)
data |>
ggplot(aes(x = distance)) +
geom_histogram(bins = 20) +
labs(
x = "Distance to Rail Trail (Miles)",
y = "Number of Houses",
title = "Distance to Rail Trail of Homes Sold in 2007"
)
summary(data$distance)
data |>
ggplot(aes(x = log(distance))) +
geom_histogram(bins = 20) +
labs(
x = "Distance to Rail Trail (Miles)",
y = "Number of Houses",
title = "Distance to Rail Trail of Homes Sold in 2007"
)
summary(data$distance)
data |>
ggplot(aes(x = distance)) +
geom_histogram(bins = 20) +
labs(
x = "Distance to Rail Trail (Miles)",
y = "Number of Houses",
title = "Distance to Rail Trail of Homes Sold in 2007"
)
data |>
ggplot(aes(x = log(price2007))) +
geom_histogram(bins = 20) +
labs(
x = "Estimated 2007 Value (Thousands of Dollars)",
y = "Number of Houses",
title = "Value of Homes Sold in 2007"
)
data |>
ggplot(aes(x = price2007)) +
geom_histogram(bins = 20) +
labs(
x = "Estimated 2007 Value (Thousands of Dollars)",
y = "Number of Houses",
title = "Value of Homes Sold in 2007"
)
data |>
ggplot(aes(x = distance)) +
geom_histogram(bins = 20) +
labs(
x = "Distance to Rail Trail (Miles)",
y = "Number of Houses",
title = "Distance to Rail Trail of Homes Sold in 2007"
)
data |>
ggplot(aes(x = log(distance), y = log(price2007))) +
geom_point() +
labs(
x = "Distance to Rail Trail",
y = "Estimated 2007 Value (Thousands of Dollars)",
title = "Housing Value vs. Distance to Rail Trail"
)
data |>
ggplot(aes(x = distance, y = price2007)) +
geom_point() +
labs(
x = "Distance to Rail Trail",
y = "Estimated 2007 Value (Thousands of Dollars)",
title = "Housing Value vs. Distance to Rail Trail"
)
data |>
ggplot(aes(x = distance, y = log(price2007))) +
geom_point() +
labs(
x = "Distance to Rail Trail",
y = "Estimated 2007 Value (Thousands of Dollars)",
title = "Housing Value vs. Distance to Rail Trail"
)
data |>
ggplot(aes(x = distance, y = price2007)) +
geom_point() +
labs(
x = "Distance to Rail Trail",
y = "Estimated 2007 Value (Thousands of Dollars)",
title = "Housing Value vs. Distance to Rail Trail"
)
data |>
ggplot(aes(x = distance, y = log(price2007))) +
geom_point() +
labs(
x = "Distance to Rail Trail",
y = "Estimated 2007 Value (Thousands of Dollars)",
title = "Housing Value vs. Distance to Rail Trail"
)
data |>
ggplot(aes(x = distance, y = price2007)) +
geom_point() +
labs(
x = "Distance to Rail Trail",
y = "Estimated 2007 Value (Thousands of Dollars)",
title = "Housing Value vs. Distance to Rail Trail"
)
summary(data$bedrooms)
data |>
ggplot(aes(x = bedrooms)) +
geom_bar() +
labs(
x = "Number of Bedrooms",
y = "Number of Houses",
title = "Number of Bedrooms in Houses Sold in 2007"
)
summary(data$garage_spaces)
data |>
ggplot(aes(x = garage_spaces)) +
geom_bar() +
labs(
x = "Number of Garage Spaces",
y = "Number of Houses",
title = "Number of Garage Spaces in Houses Sold in 2007"
)
summary(data$bikescore)
data |>
ggplot(aes(x = bikescore)) +
geom_histogram(bins = 10) +
labs (
x = "Bike Friendliness",
y = "Number of Houses",
title = "Bike Friendliness near Houses Sold in 2007"
)
data |>
ggplot(aes(x = bikescore)) +
geom_histogram(bins = 15) +
labs (
x = "Bike Friendliness",
y = "Number of Houses",
title = "Bike Friendliness near Houses Sold in 2007"
)
data |>
ggplot(aes(x = bikescore)) +
geom_histogram(bins = 10) +
labs (
x = "Bike Friendliness",
y = "Number of Houses",
title = "Bike Friendliness near Houses Sold in 2007"
)
summary(data$bikescore)
data |>
ggplot(aes(x = bikescore)) +
geom_histogram(bins = 10) +
labs (
x = "Bike Friendliness",
y = "Number of Houses",
title = "Bike Friendliness near Houses Sold in 2007"
)
summary(data$walkscore)
data |>
ggplot(aes(x = walkscore)) +
geom_histogram(bins = 10) +
labs (
x = "Walkability",
y = "Number of Houses",
title = "Walkability near Houses Sold in 2007"
)
data |>
ggplot(aes(x = distance, y = price2007)) +
geom_point() +
labs(
x = "Distance to Rail Trail",
y = "Estimated 2007 Value (Thousands of Dollars)",
title = "Housing Value vs. Distance to Rail Trail"
)
data |>
ggplot(aes(x = acre, y = price2007)) +
geom_point() +
labs(
x = "Number of Acres on Property",
y = "Estimated 2007 Value (Thousands of Dollars)",
title = "Home Value vs. Number of Acres"
)
data |>
ggplot(aes(x = squarefeet, y = price2007)) +
geom_point() +
labs(
x = "Interior Finished Space (Thousands of Sq. Ft.)",
y = "Estimated 2007 Value (Thousands of Dollars)",
title = "Home Value vs. Interior Furnished Space"
)
data |>
ggplot(aes(x = bedrooms, y = price2007)) +
geom_boxplot() +
labs(
x = "Number of Bedrooms",
y = "Estimated 2007 Value (Thousands of Dollars)",
title = "Housing Value vs. Number of Bedrooms"
)
data |>
ggplot(aes(x = garage_spaces, y = price2007)) +
geom_boxplot() +
labs(
x = "Number of Garage Spaces",
y = "Estimated 2007 Value (Thousands of Dollars)",
title = "Housing Value vs. Number of Garage Spaces"
)
data |>
ggplot(aes(x = bikescore, y = price2007)) +
geom_point() +
labs(
x = "Bike Friendliness",
y = "Estimated 2007 Value (Thousands of Dollars)",
title = "Home Value vs. Interior Furnished Space"
)
data |>
ggplot(aes(x = bikescore, y = price2007)) +
geom_point() +
labs(
x = "Bike Friendliness",
y = "Estimated 2007 Value (Thousands of Dollars)",
title = "Home Value vs. Bike Friendliness"
)
data |>
ggplot(aes(x = walkscore, y = price2007)) +
geom_point() +
labs(
x = "Walkability",
y = "Estimated 2007 Value (Thousands of Dollars)",
title = "Home Value vs. Walkability"
)
library(tidyverse)
knitr::opts_chunk$set(echo = FALSE)
linkedin <- read.csv("postings.csv")
benefits <- read.csv("jobs/benefits.csv")
job_industries <- read.csv("jobs/job_industries.csv")
job_skills <- read.csv("jobs/job_skills.csv")
# The salaries info is already in postings.csv
# salaries <- read.csv("jobs/salaries.csv")
companies <- read.csv("companies/companies.csv")
company_industries <- read.csv("companies/company_industries.csv")
company_specialities <- read.csv("companies/company_specialities.csv")
employee_counts <- read.csv("companies/employee_counts.csv")
industry_ids <- read.csv("mappings/industries.csv")
skills_ids <- read.csv("mappings/skills.csv")
# Remove lines with empty industry names
industry_ids <- industry_ids |>
filter(industry_name != "")
# Connect industry IDs and skills abbreviations with job IDs
# Pivot these DataFrames so that each row is one job posting
job_industries <- job_industries |>
full_join(industry_ids, by = "industry_id") |>
select(-industry_id) |>
mutate(dummy = 1) |>
pivot_wider(
names_from = industry_name,
values_from = dummy,
values_fill = 0
)
job_skills <- job_skills |>
full_join(skills_ids, by = "skill_abr") |>
select(-skill_abr) |>
mutate(dummy = 1) |>
pivot_wider(
names_from = skill_name,
values_from = dummy,
values_fill = 0
)
benefits <- benefits |>
# The Inferred column talks about how the data was scraped, not needed
select(-inferred) |>
mutate(dummy = 1) |>
pivot_wider(
names_from = type,
values_from = dummy,
values_fill = 0
)
# Join industries, skills, and benefits to each posting
linkedin <- linkedin |>
full_join(job_industries, by = "job_id") |>
full_join(job_skills, by = "job_id") |>
full_join(benefits, by = "job_id")
# Employee counts were measured at various times, convert Unix stamps
employee_counts <- employee_counts |>
mutate(date = as.POSIXct(time_recorded, origin = "1970-01-01", tz = "UTC"))
# Don't join employee counts and specialties because too big
companies <- companies |>
full_join(company_industries, by = "company_id")
# This R Script joins several of the job posting CSV files together
# It also writes them to new CSVs to save time when running the R Markdown file
linkedin <- read.csv("postings.csv")
getwd()
# This R Script joins several of the job posting CSV files together
# It also writes them to new CSVs to save time when running the R Markdown file
setwd(here::here())
linkedin <- read.csv("postings.csv")
here::here()
setwd("C:/Users/Avery/Documents/CMU/Fall Semester/Data Visualization/ClAIrvoyant")
# This R Script joins several of the job posting CSV files together
# It also writes them to new CSVs to save time when running the R Markdown file
# setwd("C:/Users/Avery/Documents/CMU/Fall Semester/Data Visualization/ClAIrvoyant")
linkedin <- read.csv("postings.csv")
benefits <- read.csv("jobs/benefits.csv")
job_industries <- read.csv("jobs/job_industries.csv")
job_skills <- read.csv("jobs/job_skills.csv")
# The salaries info is already in postings.csv
# salaries <- read.csv("jobs/salaries.csv")
companies <- read.csv("companies/companies.csv")
company_industries <- read.csv("companies/company_industries.csv")
company_specialities <- read.csv("companies/company_specialities.csv")
employee_counts <- read.csv("companies/employee_counts.csv")
industry_ids <- read.csv("mappings/industries.csv")
skills_ids <- read.csv("mappings/skills.csv")
# Remove lines with empty industry names
industry_ids <- industry_ids |>
filter(industry_name != "")
View(industry_ids)
# This R Script joins several of the job posting CSV files together
# It also writes them to new CSVs to save time when running the R Markdown file
# setwd("C:/Users/Avery/Documents/CMU/Fall Semester/Data Visualization/ClAIrvoyant")
library(tidyverse)
linkedin <- read.csv("postings.csv")
benefits <- read.csv("jobs/benefits.csv")
job_industries <- read.csv("jobs/job_industries.csv")
job_skills <- read.csv("jobs/job_skills.csv")
# The salaries info is already in postings.csv
# salaries <- read.csv("jobs/salaries.csv")
companies <- read.csv("companies/companies.csv")
company_industries <- read.csv("companies/company_industries.csv")
company_specialities <- read.csv("companies/company_specialities.csv")
employee_counts <- read.csv("companies/employee_counts.csv")
industry_ids <- read.csv("mappings/industries.csv")
skills_ids <- read.csv("mappings/skills.csv")
# Remove lines with empty industry names
industry_ids <- industry_ids |>
filter(industry_name != "")
# Connect industry IDs and skills abbreviations with job IDs
# Pivot these DataFrames so that each row is one job posting
job_industries <- job_industries |>
full_join(industry_ids, by = "industry_id") |>
select(-industry_id) |>
mutate(dummy = 1) |>
pivot_wider(
names_from = industry_name,
values_from = dummy,
values_fill = 0
)
job_skills <- job_skills |>
full_join(skills_ids, by = "skill_abr") |>
select(-skill_abr) |>
mutate(dummy = 1) |>
pivot_wider(
names_from = skill_name,
values_from = dummy,
values_fill = 0
)
benefits <- benefits |>
# The Inferred column talks about how the data was scraped, not needed
select(-inferred) |>
mutate(dummy = 1) |>
pivot_wider(
names_from = type,
values_from = dummy,
values_fill = 0
)
# Join industries, skills, and benefits to each posting
linkedin <- linkedin |>
full_join(job_industries, by = "job_id") |>
full_join(job_skills, by = "job_id") |>
full_join(benefits, by = "job_id")
# Employee counts were measured at various times, convert Unix stamps
employee_counts <- employee_counts |>
mutate(date = as.POSIXct(time_recorded, origin = "1970-01-01", tz = "UTC"))
# Don't join employee counts and specialties because too big
companies <- companies |>
full_join(company_industries, by = "company_id")
# Write all edited CSVs
write.csv(linkedin, "linkedin.csv")
write.csv(companies, "companies/companies_new.csv")
write.csv(employee_counts, "companies/employee_counts_new.csv")
rm(list=ls())
library(tidyverse)
knitr::opts_chunk$set(echo = FALSE)
linkedin <- read.csv("linkedin.csv")
companies <- read.csv("companies/companies_new.csv")
company_specialities <- read.csv("companies/company_specialities.csv")
employee_counts <- read.csv("companies/employee_counts_new.csv")
View(linkedin)
View(company_specialities)
View(linkedin)
View(linkedin |> filter(company_name == ""))
